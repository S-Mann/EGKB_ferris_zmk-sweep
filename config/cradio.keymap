/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define DEFAULT     0
#define LOWER       1
#define RAISE       2
#define ADJUST      3
#define BLUETOOTH   4

// -----------------

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

&sk { ignore-modifiers; };

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LSHFT k1 &ht LALT k2   &ht LCTRL k3 &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {

    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        goto_adjust {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys
        // internal-left & external-right thumb keys
        // both left thumb keys

        left_bluetooth {
            bindings = <&mo 4>;
            key-positions = <31 32>;
        };

        right_bluetooth {
            bindings = <&mo 4>;
            key-positions = <33 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // base layer

        default {
            bindings = <
&kp Q               &kp W           &kp E           &kp R               &kp T        &kp Y          &kp U              &kp I            &kp O            &kp P
HRML(A,             S,              D,              F)                  &kp G        &kp H          HRMR(J,            K,               L,               SEMICOLON)
&kp Z               &kp X           &kp C           &kp V               &kp B        &kp N          &kp M              &kp COMMA        &kp DOT          &kp SLASH
                                                    &lt 1 SINGLE_QUOTE  &kp ENTER    &kp BACKSPACE  &lt 2 SPACE
            >;
        };

        // numbers, math and navigation

        lower {
            bindings = <
&kp N1    &kp N2        &kp N3     &kp N4              &kp N5         &kp N6     &kp N7       &kp N8        &kp N9            &kp N0
&kp LEFT  &kp UP_ARROW  &kp DOWN   &kp RIGHT           &kp TAB        &kp GRAVE  &kp MINUS    &kp PLUS      &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp HOME  &kp END       &kp PG_UP  &kp PG_DN           &trans         &kp EQUAL  &kp SLASH    &kp ASTERISK  &trans            &kp BACKSLASH
                                   &lt 1 SINGLE_QUOTE  &trans         &trans     &lt 2 SPACE
            >;
        };

        // symbols and rarely used modifiers

        raise {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR          &kp PERCENT    &kp CARET  &kp AMPERSAND   &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&sk ESC          &trans       &trans    &trans              &trans         &kp TILDE  &kp UNDERSCORE  &trans     &kp LEFT_BRACE        &kp RIGHT_BRACE
&kp LC(CAPS)     &trans       &trans    &trans              &trans         &trans     &trans          &trans     &trans                &kp PIPE
                                        &lt 1 SINGLE_QUOTE  &kp DELETE     &trans     &lt 2 SPACE
            >;
        };

        // function keys

        adjust {
            bindings = <
&trans             &trans           &trans      &trans              &trans        &kp F1   &kp F2       &kp F3  &kp F4       &kp F5
&trans             &kp C_PREV       &kp C_PLAY  &kp C_NEXT          &kp C_MUTE    &kp F6   &kp F7       &kp F8  &kp F9       &kp F10
&kp K_VOLUME_DOWN  &kp C_VOLUME_UP  &none       &none               &none         &kp F11  &kp F12      &none   &bootloader  &sys_reset
                                                &lt 1 SINGLE_QUOTE  &none         &none    &lt 2 SPACE
            >;
        };

        // bluetooth layer, mirrored on both hands

        bluetooth {
            bindings = <
&sys_reset   &none  &none  &none           &bt BT_SEL 0    &bt BT_SEL 0  &none           &none     &none  &sys_reset
&bootloader  &none  &none  &bt BT_CLR_ALL  &bt BT_SEL 1    &bt BT_SEL 1  &bt BT_CLR_ALL  &none     &none  &bootloader
&none        &none  &none  &bt BT_CLR      &bt BT_SEL 2    &bt BT_SEL 2  &bt BT_CLR      &none     &none  &none
                                           &none           &none         &none           &none
            >;
        };
    };
};
